{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","createTitle","length","join","changeButton","good","setState","includes","filter","x","this","className","type","onClick","map","classNames","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,cAAe,CAAC,Q,EAGlBC,YAAc,SAACF,GACb,OAAOA,EAAMG,OAAS,EAAf,UACAH,EAAMI,KAAK,MADX,YACqC,IAAjBJ,EAAMG,OAC3B,KACA,MAHC,aAIH,qB,EAGNE,aAAe,SAACC,GACd,EAAKC,UAAS,SAAAR,GAAK,MAAK,CACtBE,cAAeF,EAAME,cAAcO,SAASF,GACxCP,EAAME,cAAcQ,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,KAD3B,sBAEPP,EAAME,eAFC,CAEcK,S,4CAIjC,WAAU,IAAD,OACCN,EAAUW,KAAKZ,MAAfC,MACAC,EAAkBU,KAAKZ,MAAvBE,cAER,OACE,sBAAKW,UAAU,MAAf,UACE,6BAAKD,KAAKT,YAAYD,KACpBA,EAAcE,OAAS,GACvB,wBACEU,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKP,UAAS,WACZ,MAAO,CACLN,cAAe,QANvB,mBAeF,6BACGD,EAAMe,KAAI,SAAAT,GAAI,OACb,qBAEEM,UACEI,IAAW,OAAQ,CAAEC,OAAQhB,EAAcO,SAASF,KAHxD,UAMGA,EACD,wBACEO,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKT,aAAaC,IAHnC,SAKIL,EAAcO,SAASF,GAAQ,SAAW,aAXzCA,e,GAhDDY,IAAMC,WAqETrB,ICvFfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04e83a9f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  };\n\n  createTitle = (goods: string[]) => {\n    return goods.length > 0\n      ? `${goods.join(', ')} ${goods.length === 1\n        ? 'is'\n        : 'are'} selected`\n      : 'No goods selected';\n  };\n\n  changeButton = (good: string) => {\n    this.setState(state => ({\n      selectedGoods: state.selectedGoods.includes(good)\n        ? state.selectedGoods.filter(x => x !== good)\n        : [...state.selectedGoods, good],\n    }));\n  };\n\n  render() {\n    const { goods } = this.state;\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.createTitle(selectedGoods)}</h1>\n        {(selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button buttonOne\"\n            onClick={() => {\n              this.setState(() => {\n                return {\n                  selectedGoods: [],\n                };\n              });\n            }}\n          >\n            Clear\n          </button>\n        )\n        )}\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              className={\n                classNames('list', { active: selectedGoods.includes(good) })\n              }\n            >\n              {good}\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => this.changeButton(good)}\n              >\n                { selectedGoods.includes(good) ? 'Remove' : 'Select' }\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}